/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { PatternString } from "@pagopa/ts-commons/lib/strings";
import { NonNegativeNumber } from "@pagopa/ts-commons/lib/numbers";
import { enumType } from "@pagopa/ts-commons/lib/types";
import { UTCISODateFromString } from "@pagopa/ts-commons/lib/dates";

export enum StatusEnum {
  "CREATED" = "CREATED",

  "IDENTIFIED" = "IDENTIFIED",

  "AUTHORIZED" = "AUTHORIZED",

  "CAPTURED" = "CAPTURED",

  "REWARDED" = "REWARDED",

  "REJECTED" = "REJECTED"
}

// required attributes
const TransactionBarCodeResponseR = t.interface({
  id: PatternString(".*"),

  initiativeId: PatternString("^[A-Za-z0-9_-]+$"),

  initiativeName: PatternString(".*"),

  residualBudgetCents: NonNegativeNumber,

  status: enumType<StatusEnum>(StatusEnum, "status"),

  trxCode: PatternString("^[a-zA-Z0-9]+$"),

  trxDate: UTCISODateFromString,

  trxExpirationSeconds: NonNegativeNumber
});

// optional attributes
const TransactionBarCodeResponseO = t.partial({});

export const TransactionBarCodeResponse = t.intersection(
  [TransactionBarCodeResponseR, TransactionBarCodeResponseO],
  "TransactionBarCodeResponse"
);

export type TransactionBarCodeResponse = t.TypeOf<
  typeof TransactionBarCodeResponse
>;
