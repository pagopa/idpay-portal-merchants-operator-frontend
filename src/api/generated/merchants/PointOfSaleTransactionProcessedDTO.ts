/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import { InvoiceFileDTO } from "./InvoiceFileDTO";
import * as t from "io-ts";
import { PatternString } from "@pagopa/ts-commons/lib/strings";
import { enumType } from "@pagopa/ts-commons/lib/types";
import {
  IWithinRangeIntegerTag,
  WithinRangeInteger
} from "@pagopa/ts-commons/lib/numbers";
import { UTCISODateFromString } from "@pagopa/ts-commons/lib/dates";

export enum ChannelEnum {
  "BARCODE" = "BARCODE",

  "QRCODE" = "QRCODE",

  "IDPAYCODE" = "IDPAYCODE"
}

export enum StatusEnum {
  "REWARDED" = "REWARDED",

  "CANCELLED" = "CANCELLED",

  "REFUNDED" = "REFUNDED"
}

// additional attributes

export const PointOfSaleTransactionProcessedDTOAdditionalProperties = t.record(
  t.string,

  PatternString(".*"),

  "PointOfSaleTransactionProcessedDTOAdditionalProperties"
);

export type PointOfSaleTransactionProcessedDTOAdditionalProperties = t.TypeOf<
  typeof PointOfSaleTransactionProcessedDTOAdditionalProperties
>;

// required attributes
const PointOfSaleTransactionProcessedDTOR = t.interface({});

// optional attributes
const PointOfSaleTransactionProcessedDTOO = t.partial({
  additionalProperties: PointOfSaleTransactionProcessedDTOAdditionalProperties,

  channel: enumType<ChannelEnum>(ChannelEnum, "channel"),

  effectiveAmountCents: t.union([
    WithinRangeInteger<0, 1000000000, IWithinRangeIntegerTag<0, 1000000000>>(
      0,
      1000000000
    ),
    t.literal(1000000000)
  ]),

  fiscalCode: PatternString("^[A-Z0-9]+$"),

  id: PatternString(".*"),

  invoiceFile: InvoiceFileDTO,

  rewardAmountCents: t.union([
    WithinRangeInteger<0, 1000000000, IWithinRangeIntegerTag<0, 1000000000>>(
      0,
      1000000000
    ),
    t.literal(1000000000)
  ]),

  status: enumType<StatusEnum>(StatusEnum, "status"),

  trxDate: UTCISODateFromString,

  updateDate: UTCISODateFromString
});

export const PointOfSaleTransactionProcessedDTO = t.intersection(
  [PointOfSaleTransactionProcessedDTOR, PointOfSaleTransactionProcessedDTOO],
  "PointOfSaleTransactionProcessedDTO"
);

export type PointOfSaleTransactionProcessedDTO = t.TypeOf<
  typeof PointOfSaleTransactionProcessedDTO
>;
