/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { enumType } from "@pagopa/ts-commons/lib/types";
import { PatternString } from "@pagopa/ts-commons/lib/strings";

export enum CodeEnum {
  "PAYMENT_NOT_FOUND_EXPIRED" = "PAYMENT_NOT_FOUND_EXPIRED",

  "PAYMENT_NOT_FOUND_OR_EXPIRED" = "PAYMENT_NOT_FOUND_OR_EXPIRED",

  "PAYMENT_TRANSACTION_EXPIRED" = "PAYMENT_TRANSACTION_EXPIRED",

  "PAYMENT_INITIATIVE_NOT_FOUND" = "PAYMENT_INITIATIVE_NOT_FOUND",

  "PAYMENT_INITIATIVE_INVALID_DATE" = "PAYMENT_INITIATIVE_INVALID_DATE",

  "PAYMENT_INITIATIVE_NOT_DISCOUNT" = "PAYMENT_INITIATIVE_NOT_DISCOUNT",

  "PAYMENT_ALREADY_AUTHORIZED" = "PAYMENT_ALREADY_AUTHORIZED",

  "PAYMENT_ALREADY_CANCELLED" = "PAYMENT_ALREADY_CANCELLED",

  "PAYMENT_BUDGET_EXHAUSTED" = "PAYMENT_BUDGET_EXHAUSTED",

  "PAYMENT_GENERIC_REJECTED" = "PAYMENT_GENERIC_REJECTED",

  "PAYMENT_TOO_MANY_REQUESTS" = "PAYMENT_TOO_MANY_REQUESTS",

  "PAYMENT_GENERIC_ERROR" = "PAYMENT_GENERIC_ERROR",

  "PAYMENT_USER_SUSPENDED" = "PAYMENT_USER_SUSPENDED",

  "PAYMENT_USER_NOT_ONBOARDED" = "PAYMENT_USER_NOT_ONBOARDED",

  "PAYMENT_USER_UNSUBSCRIBED" = "PAYMENT_USER_UNSUBSCRIBED",

  "PAYMENT_ALREADY_ASSIGNED" = "PAYMENT_ALREADY_ASSIGNED",

  "PAYMENT_NOT_ALLOWED_FOR_TRX_STATUS" = "PAYMENT_NOT_ALLOWED_FOR_TRX_STATUS",

  "PAYMENT_NOT_ALLOWED_MISMATCHED_MERCHANT" = "PAYMENT_NOT_ALLOWED_MISMATCHED_MERCHANT",

  "PAYMENT_USER_NOT_ASSOCIATED" = "PAYMENT_USER_NOT_ASSOCIATED",

  "PAYMENT_DELETE_NOT_ALLOWED_FOR_TRX_STATUS" = "PAYMENT_DELETE_NOT_ALLOWED_FOR_TRX_STATUS",

  "PAYMENT_UNRELATE_NOT_ALLOWED_FOR_TRX_STATUS" = "PAYMENT_UNRELATE_NOT_ALLOWED_FOR_TRX_STATUS",

  "PAYMENT_AMOUNT_NOT_VALID" = "PAYMENT_AMOUNT_NOT_VALID",

  "PAYMENT_MERCHANT_NOT_ONBOARDED" = "PAYMENT_MERCHANT_NOT_ONBOARDED",

  "PAYMENT_INVALID_REQUEST" = "PAYMENT_INVALID_REQUEST",

  "PAYMENT_STATUS_NOT_VALID" = "PAYMENT_STATUS_NOT_VALID",

  "PAYMENT_TRANSACTION_VERSION_PENDING" = "PAYMENT_TRANSACTION_VERSION_PENDING",

  "PRODUCT_NOT_FOUND" = "PRODUCT_NOT_FOUND"
}

// required attributes
const TransactionErrorDTOR = t.interface({
  code: enumType<CodeEnum>(CodeEnum, "code"),

  message: PatternString(".*")
});

// optional attributes
const TransactionErrorDTOO = t.partial({});

export const TransactionErrorDTO = t.intersection(
  [TransactionErrorDTOR, TransactionErrorDTOO],
  "TransactionErrorDTO"
);

export type TransactionErrorDTO = t.TypeOf<typeof TransactionErrorDTO>;
