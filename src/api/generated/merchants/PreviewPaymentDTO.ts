/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import {
  IWithinRangeIntegerTag,
  WithinRangeInteger
} from "@pagopa/ts-commons/lib/numbers";
import { PatternString } from "@pagopa/ts-commons/lib/strings";
import { enumType } from "@pagopa/ts-commons/lib/types";
import { UTCISODateFromString } from "@pagopa/ts-commons/lib/dates";

export enum StatusEnum {
  "CREATED" = "CREATED",

  "IDENTIFIED" = "IDENTIFIED",

  "AUTHORIZATION_REQUESTED" = "AUTHORIZATION_REQUESTED",

  "AUTHORIZED" = "AUTHORIZED"
}

// required attributes
const PreviewPaymentDTOR = t.interface({});

// optional attributes
const PreviewPaymentDTOO = t.partial({
  extendedAuthorization: t.boolean,

  originalAmountCents: t.union([
    WithinRangeInteger<0, 1000000000, IWithinRangeIntegerTag<0, 1000000000>>(
      0,
      1000000000
    ),
    t.literal(1000000000)
  ]),

  productGtin: PatternString("^[a-zA-Z0-9]{1,14}$"),

  productName: PatternString(".*"),

  residualAmountCents: t.union([
    WithinRangeInteger<0, 1000000000, IWithinRangeIntegerTag<0, 1000000000>>(
      0,
      1000000000
    ),
    t.literal(1000000000)
  ]),

  rewardCents: t.union([
    WithinRangeInteger<0, 1000000000, IWithinRangeIntegerTag<0, 1000000000>>(
      0,
      1000000000
    ),
    t.literal(1000000000)
  ]),

  status: enumType<StatusEnum>(StatusEnum, "status"),

  trxCode: PatternString("^[a-zA-Z0-9]+$"),

  trxDate: UTCISODateFromString,

  userId: PatternString(".*")
});

export const PreviewPaymentDTO = t.intersection(
  [PreviewPaymentDTOR, PreviewPaymentDTOO],
  "PreviewPaymentDTO"
);

export type PreviewPaymentDTO = t.TypeOf<typeof PreviewPaymentDTO>;
