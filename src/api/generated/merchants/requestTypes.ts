// DO NOT EDIT THIS FILE
// This file has been generated by gen-api-models
// eslint-disable sonar/max-union-size
// eslint-disable sonarjs/no-identical-functions

import * as t from "io-ts";

import * as r from "@pagopa/ts-commons/lib/requests";

import { PointOfSaleTransactionsListDTO } from "./PointOfSaleTransactionsListDTO";

import { ErrorDTO } from "./ErrorDTO";

import { PointOfSaleTransactionsProcessedListDTO } from "./PointOfSaleTransactionsProcessedListDTO";

import { ProductListDTO } from "./ProductListDTO";

import { AuthBarCodePaymentDTO } from "./AuthBarCodePaymentDTO";

import { AuthPaymentResponseDTO } from "./AuthPaymentResponseDTO";

import { TransactionErrorDTO } from "./TransactionErrorDTO";

import { TransactionBarCodeResponse } from "./TransactionBarCodeResponse";

import { PreviewPaymentRequestDTO } from "./PreviewPaymentRequestDTO";

import { PreviewPaymentDTO } from "./PreviewPaymentDTO";

import { ReportDTO } from "./ReportDTO";

import { PointOfSaleDTO } from "./PointOfSaleDTO";

import { PointOfSaleErrorDTO } from "./PointOfSaleErrorDTO";

import { DownloadInvoiceResponseDTO } from "./DownloadInvoiceResponseDTO";

/****************************************************************
 * getPointOfSaleTransactions
 */

// Request type definition
export type GetPointOfSaleTransactionsT = r.IGetApiRequestType<
  {
    readonly Bearer: string;
    readonly page?: number;
    readonly size?: number;
    readonly sort?: string;
    readonly fiscalCode?: string;
    readonly status?: string;
    readonly productGtin?: string;
    readonly initiativeId: string;
    readonly pointOfSaleId: string;
  },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      PointOfSaleTransactionsListDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, ErrorDTO, "Access-Control-Allow-Origin">
>;

export const getPointOfSaleTransactionsDefaultResponses = {
  200: PointOfSaleTransactionsListDTO,
  400: ErrorDTO,
  401: ErrorDTO,
  404: ErrorDTO,
  429: ErrorDTO,
  500: ErrorDTO
};

export type GetPointOfSaleTransactionsResponsesT<
  A0 = PointOfSaleTransactionsListDTO,
  C0 = PointOfSaleTransactionsListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO,
  A5 = ErrorDTO,
  C5 = ErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  404: t.Type<A3, C3>;
  429: t.Type<A4, C4>;
  500: t.Type<A5, C5>;
};

export function getPointOfSaleTransactionsDecoder<
  A0 = PointOfSaleTransactionsListDTO,
  C0 = PointOfSaleTransactionsListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO,
  A5 = ErrorDTO,
  C5 = ErrorDTO
>(
  overrideTypes:
    | Partial<
        GetPointOfSaleTransactionsResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A5, "Access-Control-Allow-Origin">
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getPointOfSaleTransactionsDefaultResponses as unknown) as GetPointOfSaleTransactionsResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, "Access-Control-Allow-Origin">(
        500,
        undefined
      )
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        "Access-Control-Allow-Origin"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<500, A5, "Access-Control-Allow-Origin">
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const getPointOfSaleTransactionsDefaultDecoder = () =>
  getPointOfSaleTransactionsDecoder();

/****************************************************************
 * getPointOfSaleTransactionsProcessed
 */

// Request type definition
export type GetPointOfSaleTransactionsProcessedT = r.IGetApiRequestType<
  {
    readonly Bearer: string;
    readonly page?: number;
    readonly size?: number;
    readonly sort?: string;
    readonly fiscalCode?: string;
    readonly status?: string;
    readonly productGtin?: string;
    readonly initiativeId: string;
    readonly pointOfSaleId: string;
  },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      PointOfSaleTransactionsProcessedListDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, ErrorDTO, "Access-Control-Allow-Origin">
>;

export const getPointOfSaleTransactionsProcessedDefaultResponses = {
  200: PointOfSaleTransactionsProcessedListDTO,
  400: ErrorDTO,
  401: ErrorDTO,
  404: ErrorDTO,
  429: ErrorDTO,
  500: ErrorDTO
};

export type GetPointOfSaleTransactionsProcessedResponsesT<
  A0 = PointOfSaleTransactionsProcessedListDTO,
  C0 = PointOfSaleTransactionsProcessedListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO,
  A5 = ErrorDTO,
  C5 = ErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  404: t.Type<A3, C3>;
  429: t.Type<A4, C4>;
  500: t.Type<A5, C5>;
};

export function getPointOfSaleTransactionsProcessedDecoder<
  A0 = PointOfSaleTransactionsProcessedListDTO,
  C0 = PointOfSaleTransactionsProcessedListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO,
  A5 = ErrorDTO,
  C5 = ErrorDTO
>(
  overrideTypes:
    | Partial<
        GetPointOfSaleTransactionsProcessedResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A5, "Access-Control-Allow-Origin">
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getPointOfSaleTransactionsProcessedDefaultResponses as unknown) as GetPointOfSaleTransactionsProcessedResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, "Access-Control-Allow-Origin">(
        500,
        undefined
      )
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        "Access-Control-Allow-Origin"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<500, A5, "Access-Control-Allow-Origin">
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const getPointOfSaleTransactionsProcessedDefaultDecoder = () =>
  getPointOfSaleTransactionsProcessedDecoder();

/****************************************************************
 * getProducts
 */

// Request type definition
export type GetProductsT = r.IGetApiRequestType<
  {
    readonly Bearer: string;
    readonly page?: number;
    readonly size?: number;
    readonly sort?: string;
    readonly category?: string;
    readonly eprelCode?: string;
    readonly gtinCode?: string;
    readonly productFileId?: string;
    readonly productName?: string;
    readonly status?: string;
    readonly organizationId?: string;
  },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      ProductListDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, ErrorDTO, "Access-Control-Allow-Origin">
>;

export const getProductsDefaultResponses = {
  200: ProductListDTO,
  400: ErrorDTO,
  401: ErrorDTO,
  429: ErrorDTO,
  500: ErrorDTO
};

export type GetProductsResponsesT<
  A0 = ProductListDTO,
  C0 = ProductListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  429: t.Type<A3, C3>;
  500: t.Type<A4, C4>;
};

export function getProductsDecoder<
  A0 = ProductListDTO,
  C0 = ProductListDTO,
  A1 = ErrorDTO,
  C1 = ErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = ErrorDTO,
  C3 = ErrorDTO,
  A4 = ErrorDTO,
  C4 = ErrorDTO
>(
  overrideTypes:
    | Partial<GetProductsResponsesT<A0, C0, A1, C1, A2, C2, A3, C3, A4, C4>>
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A3,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A4, "Access-Control-Allow-Origin">
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getProductsDefaultResponses as unknown) as GetProductsResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A3,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, "Access-Control-Allow-Origin">(
        500,
        undefined
      )
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        "Access-Control-Allow-Origin"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<500, A4, "Access-Control-Allow-Origin">
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const getProductsDefaultDecoder = () => getProductsDecoder();

/****************************************************************
 * authPaymentBarCode
 */

// Request type definition
export type AuthPaymentBarCodeT = r.IPutApiRequestType<
  {
    readonly Bearer: string;
    readonly trxCode: string;
    readonly body?: AuthBarCodePaymentDTO | ReadableStream<Uint8Array> | Buffer;
  },
  "Content-Type" | "Authorization",
  never,
  | r.IResponseType<
      200,
      AuthPaymentResponseDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, never>
>;

export const authPaymentBarCodeDefaultResponses = {
  200: AuthPaymentResponseDTO,
  400: TransactionErrorDTO,
  401: TransactionErrorDTO,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type AuthPaymentBarCodeResponsesT<
  A0 = AuthPaymentResponseDTO,
  C0 = AuthPaymentResponseDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function authPaymentBarCodeDecoder<
  A0 = AuthPaymentResponseDTO,
  C0 = AuthPaymentResponseDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        AuthPaymentBarCodeResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A6, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((authPaymentBarCodeDefaultResponses as unknown) as AuthPaymentBarCodeResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A6, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d200, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const authPaymentBarCodeDefaultDecoder = () =>
  authPaymentBarCodeDecoder();

/****************************************************************
 * capturePayment
 */

// Request type definition
export type CapturePaymentT = r.IPutApiRequestType<
  { readonly Bearer: string; readonly trxCode: string },
  "Content-Type" | "Authorization",
  never,
  | r.IResponseType<
      200,
      TransactionBarCodeResponse,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      ErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      500,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
>;

export const capturePaymentDefaultResponses = {
  200: TransactionBarCodeResponse,
  400: TransactionErrorDTO,
  401: ErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type CapturePaymentResponsesT<
  A0 = TransactionBarCodeResponse,
  C0 = TransactionBarCodeResponse,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  404: t.Type<A3, C3>;
  429: t.Type<A4, C4>;
  500: t.Type<A5, C5>;
};

export function capturePaymentDecoder<
  A0 = TransactionBarCodeResponse,
  C0 = TransactionBarCodeResponse,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = ErrorDTO,
  C2 = ErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        CapturePaymentResponsesT<A0, C0, A1, C1, A2, C2, A3, C3, A4, C4, A5, C5>
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      500,
      A5,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((capturePaymentDefaultResponses as unknown) as CapturePaymentResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        500,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<
      500,
      A5,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const capturePaymentDefaultDecoder = () => capturePaymentDecoder();

/****************************************************************
 * previewPayment
 */

// Request type definition
export type PreviewPaymentT = r.IPutApiRequestType<
  {
    readonly Bearer: string;
    readonly trxCode: string;
    readonly body:
      | PreviewPaymentRequestDTO
      | ReadableStream<Uint8Array>
      | Buffer;
  },
  "Content-Type" | "Authorization",
  never,
  | r.IResponseType<
      200,
      PreviewPaymentDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, never>
>;

export const previewPaymentDefaultResponses = {
  200: PreviewPaymentDTO,
  400: TransactionErrorDTO,
  401: TransactionErrorDTO,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type PreviewPaymentResponsesT<
  A0 = PreviewPaymentDTO,
  C0 = PreviewPaymentDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function previewPaymentDecoder<
  A0 = PreviewPaymentDTO,
  C0 = PreviewPaymentDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        PreviewPaymentResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A6, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((previewPaymentDefaultResponses as unknown) as PreviewPaymentResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A6, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d200, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const previewPaymentDefaultDecoder = () => previewPaymentDecoder();

/****************************************************************
 * deleteTransaction
 */

// Request type definition
export type DeleteTransactionT = r.IDeleteApiRequestType<
  { readonly Bearer: string; readonly transactionId: string },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, never>
>;

export const deleteTransactionDefaultResponses = {
  200: t.undefined,
  400: TransactionErrorDTO,
  401: t.undefined,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type DeleteTransactionResponsesT<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function deleteTransactionDecoder<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        DeleteTransactionResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A6, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((deleteTransactionDefaultResponses as unknown) as DeleteTransactionResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A6, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d200, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const deleteTransactionDefaultDecoder = () => deleteTransactionDecoder();

/****************************************************************
 * getTransactionPreviewPdf
 */

// Request type definition
export type GetTransactionPreviewPdfT = r.IGetApiRequestType<
  { readonly Bearer: string; readonly transactionId: string },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      ReportDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      500,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "RateLimit-Limit"
      | "RateLimit-Reset"
      | "Retry-After"
    >
>;

export const getTransactionPreviewPdfDefaultResponses = {
  200: ReportDTO,
  400: TransactionErrorDTO,
  401: t.undefined,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type GetTransactionPreviewPdfResponsesT<
  A0 = ReportDTO,
  C0 = ReportDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function getTransactionPreviewPdfDecoder<
  A0 = ReportDTO,
  C0 = ReportDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        GetTransactionPreviewPdfResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      500,
      A6,
      | "Access-Control-Allow-Origin"
      | "RateLimit-Limit"
      | "RateLimit-Reset"
      | "Retry-After"
    >
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getTransactionPreviewPdfDefaultResponses as unknown) as GetTransactionPreviewPdfResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        500,
        | "Access-Control-Allow-Origin"
        | "RateLimit-Limit"
        | "RateLimit-Reset"
        | "Retry-After"
      >(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        | "Access-Control-Allow-Origin"
        | "RateLimit-Limit"
        | "RateLimit-Reset"
        | "Retry-After"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<
      500,
      A6,
      | "Access-Control-Allow-Origin"
      | "RateLimit-Limit"
      | "RateLimit-Reset"
      | "Retry-After"
    >
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d200, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const getTransactionPreviewPdfDefaultDecoder = () =>
  getTransactionPreviewPdfDecoder();

/****************************************************************
 * reversalTransaction
 */

// Request type definition
export type ReversalTransactionT = r.IPostApiRequestType<
  {
    readonly Bearer: string;
    readonly transactionId: string;
    readonly file: File;
  },
  "Content-Type" | "Authorization",
  never,
  | r.IResponseType<
      204,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, never>
>;

export const reversalTransactionDefaultResponses = {
  204: t.undefined,
  400: TransactionErrorDTO,
  401: t.undefined,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type ReversalTransactionResponsesT<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  204: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function reversalTransactionDecoder<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        ReversalTransactionResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      204,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A6, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((reversalTransactionDefaultResponses as unknown) as ReversalTransactionResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 204: overrideTypes } : overrideTypes)
  };

  const d204 = (type[204].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        204,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(204, undefined)
    : r.ioResponseDecoder<
        204,
        typeof type[204]["_A"],
        typeof type[204]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(204, type[204])) as r.ResponseDecoder<
    r.IResponseType<
      204,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A6, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d204, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const reversalTransactionDefaultDecoder = () =>
  reversalTransactionDecoder();

/****************************************************************
 * rewardTransaction
 */

// Request type definition
export type RewardTransactionT = r.IPostApiRequestType<
  {
    readonly Bearer: string;
    readonly transactionId: string;
    readonly file: File;
  },
  "Content-Type" | "Authorization",
  never,
  | r.IResponseType<
      204,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, never>
>;

export const rewardTransactionDefaultResponses = {
  204: t.undefined,
  400: TransactionErrorDTO,
  401: t.undefined,
  403: TransactionErrorDTO,
  404: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type RewardTransactionResponsesT<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
> = {
  204: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  403: t.Type<A3, C3>;
  404: t.Type<A4, C4>;
  429: t.Type<A5, C5>;
  500: t.Type<A6, C6>;
};

export function rewardTransactionDecoder<
  A0 = undefined,
  C0 = undefined,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO,
  A5 = TransactionErrorDTO,
  C5 = TransactionErrorDTO,
  A6 = TransactionErrorDTO,
  C6 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        RewardTransactionResponsesT<
          A0,
          C0,
          A1,
          C1,
          A2,
          C2,
          A3,
          C3,
          A4,
          C4,
          A5,
          C5,
          A6,
          C6
        >
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      204,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A6, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((rewardTransactionDefaultResponses as unknown) as RewardTransactionResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5,
      A6,
      C6
    >),
    ...(isDecoder(overrideTypes) ? { 204: overrideTypes } : overrideTypes)
  };

  const d204 = (type[204].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        204,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(204, undefined)
    : r.ioResponseDecoder<
        204,
        typeof type[204]["_A"],
        typeof type[204]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(204, type[204])) as r.ResponseDecoder<
    r.IResponseType<
      204,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d403 = (type[403].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        403,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, undefined)
    : r.ioResponseDecoder<
        403,
        typeof type[403]["_A"],
        typeof type[403]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(403, type[403])) as r.ResponseDecoder<
    r.IResponseType<
      403,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A4,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A5,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A6, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(
          r.composeResponseDecoders(
            r.composeResponseDecoders(d204, d400),
            d401
          ),
          d403
        ),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const rewardTransactionDefaultDecoder = () => rewardTransactionDecoder();

/****************************************************************
 * getPointOfSale
 */

// Request type definition
export type GetPointOfSaleT = r.IGetApiRequestType<
  {
    readonly Bearer: string;
    readonly merchantId: string;
    readonly pointOfSaleId: string;
  },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      PointOfSaleDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      PointOfSaleErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      undefined,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      PointOfSaleErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      PointOfSaleErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, PointOfSaleErrorDTO, never>
>;

export const getPointOfSaleDefaultResponses = {
  200: PointOfSaleDTO,
  400: PointOfSaleErrorDTO,
  401: t.undefined,
  404: PointOfSaleErrorDTO,
  429: PointOfSaleErrorDTO,
  500: PointOfSaleErrorDTO
};

export type GetPointOfSaleResponsesT<
  A0 = PointOfSaleDTO,
  C0 = PointOfSaleDTO,
  A1 = PointOfSaleErrorDTO,
  C1 = PointOfSaleErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = PointOfSaleErrorDTO,
  C3 = PointOfSaleErrorDTO,
  A4 = PointOfSaleErrorDTO,
  C4 = PointOfSaleErrorDTO,
  A5 = PointOfSaleErrorDTO,
  C5 = PointOfSaleErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  404: t.Type<A3, C3>;
  429: t.Type<A4, C4>;
  500: t.Type<A5, C5>;
};

export function getPointOfSaleDecoder<
  A0 = PointOfSaleDTO,
  C0 = PointOfSaleDTO,
  A1 = PointOfSaleErrorDTO,
  C1 = PointOfSaleErrorDTO,
  A2 = undefined,
  C2 = undefined,
  A3 = PointOfSaleErrorDTO,
  C3 = PointOfSaleErrorDTO,
  A4 = PointOfSaleErrorDTO,
  C4 = PointOfSaleErrorDTO,
  A5 = PointOfSaleErrorDTO,
  C5 = PointOfSaleErrorDTO
>(
  overrideTypes:
    | Partial<
        GetPointOfSaleResponsesT<A0, C0, A1, C1, A2, C2, A3, C3, A4, C4, A5, C5>
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A5, never>
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getPointOfSaleDefaultResponses as unknown) as GetPointOfSaleResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4,
      A5,
      C5
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d404 = (type[404].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        404,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, undefined)
    : r.ioResponseDecoder<
        404,
        typeof type[404]["_A"],
        typeof type[404]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(404, type[404])) as r.ResponseDecoder<
    r.IResponseType<
      404,
      A3,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A4,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, never>(500, undefined)
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        never
      >(500, type[500])) as r.ResponseDecoder<r.IResponseType<500, A5, never>>;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(
        r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
        d404
      ),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const getPointOfSaleDefaultDecoder = () => getPointOfSaleDecoder();

/****************************************************************
 * downloadInvoiceFile
 */

// Request type definition
export type DownloadInvoiceFileT = r.IGetApiRequestType<
  {
    readonly Bearer: string;
    readonly pointOfSaleId: string;
    readonly transactionId: string;
  },
  "Authorization",
  never,
  | r.IResponseType<
      200,
      DownloadInvoiceResponseDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      TransactionErrorDTO,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, TransactionErrorDTO, "Access-Control-Allow-Origin">
>;

export const downloadInvoiceFileDefaultResponses = {
  200: DownloadInvoiceResponseDTO,
  400: TransactionErrorDTO,
  401: TransactionErrorDTO,
  429: TransactionErrorDTO,
  500: TransactionErrorDTO
};

export type DownloadInvoiceFileResponsesT<
  A0 = DownloadInvoiceResponseDTO,
  C0 = DownloadInvoiceResponseDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO
> = {
  200: t.Type<A0, C0>;
  400: t.Type<A1, C1>;
  401: t.Type<A2, C2>;
  429: t.Type<A3, C3>;
  500: t.Type<A4, C4>;
};

export function downloadInvoiceFileDecoder<
  A0 = DownloadInvoiceResponseDTO,
  C0 = DownloadInvoiceResponseDTO,
  A1 = TransactionErrorDTO,
  C1 = TransactionErrorDTO,
  A2 = TransactionErrorDTO,
  C2 = TransactionErrorDTO,
  A3 = TransactionErrorDTO,
  C3 = TransactionErrorDTO,
  A4 = TransactionErrorDTO,
  C4 = TransactionErrorDTO
>(
  overrideTypes:
    | Partial<
        DownloadInvoiceFileResponsesT<A0, C0, A1, C1, A2, C2, A3, C3, A4, C4>
      >
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<
  | r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<
      429,
      A3,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  | r.IResponseType<500, A4, "Access-Control-Allow-Origin">
> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((downloadInvoiceFileDefaultResponses as unknown) as DownloadInvoiceFileResponsesT<
      A0,
      C0,
      A1,
      C1,
      A2,
      C2,
      A3,
      C3,
      A4,
      C4
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        200,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(200, type[200])) as r.ResponseDecoder<
    r.IResponseType<
      200,
      A0,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d400 = (type[400].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        400,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, undefined)
    : r.ioResponseDecoder<
        400,
        typeof type[400]["_A"],
        typeof type[400]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(400, type[400])) as r.ResponseDecoder<
    r.IResponseType<
      400,
      A1,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d401 = (type[401].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        401,
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, undefined)
    : r.ioResponseDecoder<
        401,
        typeof type[401]["_A"],
        typeof type[401]["_O"],
        | "Access-Control-Allow-Origin"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(401, type[401])) as r.ResponseDecoder<
    r.IResponseType<
      401,
      A2,
      | "Access-Control-Allow-Origin"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d429 = (type[429].name === "undefined"
    ? r.constantResponseDecoder<
        undefined,
        429,
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, undefined)
    : r.ioResponseDecoder<
        429,
        typeof type[429]["_A"],
        typeof type[429]["_O"],
        | "Access-Control-Allow-Origin"
        | "Retry-After"
        | "X-RateLimit-Limit"
        | "X-RateLimit-Remaining"
        | "X-RateLimit-Reset"
      >(429, type[429])) as r.ResponseDecoder<
    r.IResponseType<
      429,
      A3,
      | "Access-Control-Allow-Origin"
      | "Retry-After"
      | "X-RateLimit-Limit"
      | "X-RateLimit-Remaining"
      | "X-RateLimit-Reset"
    >
  >;

  const d500 = (type[500].name === "undefined"
    ? r.constantResponseDecoder<undefined, 500, "Access-Control-Allow-Origin">(
        500,
        undefined
      )
    : r.ioResponseDecoder<
        500,
        typeof type[500]["_A"],
        typeof type[500]["_O"],
        "Access-Control-Allow-Origin"
      >(500, type[500])) as r.ResponseDecoder<
    r.IResponseType<500, A4, "Access-Control-Allow-Origin">
  >;

  return r.composeResponseDecoders(
    r.composeResponseDecoders(
      r.composeResponseDecoders(r.composeResponseDecoders(d200, d400), d401),
      d429
    ),
    d500
  );
}

// Decodes the success response with the type defined in the specs
export const downloadInvoiceFileDefaultDecoder = () =>
  downloadInvoiceFileDecoder();
