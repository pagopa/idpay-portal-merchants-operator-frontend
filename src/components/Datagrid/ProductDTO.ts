/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { PatternString } from "@pagopa/ts-commons/lib/strings";
import { enumType } from "@pagopa/ts-commons/lib/types";

export enum CategoryEnum {
  "Lavatrice" = "Lavatrice",

  "Lavasciuga" = "Lavasciuga",

  "Piano cottura" = "Piano cottura",

  "Frigorifero" = "Frigorifero",

  "Asciugatrice" = "Asciugatrice",

  "Lavastoviglie" = "Lavastoviglie",

  "Cappa da cucina" = "Cappa da cucina",

  "Forno" = "Forno"
}

export enum StatusEnum {
  "APPROVED" = "APPROVED",

  "REJECTED" = "REJECTED",

  "SUPERVISION" = "SUPERVISION"
}

// required attributes
const ProductDTOR = t.interface({});

// optional attributes
const ProductDTOO = t.partial({

  brand: PatternString("^.{1,100}$"),

  category: enumType<CategoryEnum>(CategoryEnum, "category"),

  eprelCode: PatternString("^\\d+$"),

  gtinCode: PatternString("^[a-zA-Z0-9]{1,14}$"),

  linkEprel: t.string,

  model: PatternString("^.{1,100}$"),

  productName: PatternString(".*"),

});

export const ProductDTO = t.intersection(
  [ProductDTOR, ProductDTOO],
  "ProductDTO"
);

export type ProductDTO = t.TypeOf<typeof ProductDTO>;
