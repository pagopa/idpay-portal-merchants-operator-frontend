{
  "name": "idpay-portal-merchants-operator-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "homepage": ".",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "test": "vitest",
    "test:coverage": "vitest run --coverage",
    "lint": "eslint .",
    "preview": "vite preview",
    "generate": "npm-run-all generate:*",
    "clean:api-merchants": "rimraf src/api/generated/merchants && rimraf openApi/generated",
    "generate:api-merchants": "yarn run clean:api-merchants && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/merchants.openapi.yml > openApi/generated/merchants-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/merchants-swagger20.json && node ./openApi/scripts/api-merchants_fixPreGen.js && gen-api-models --api-spec openApi/generated/merchants-swagger20.json --out-dir src/api/generated/merchants --no-strict --request-types --response-decoders --client && node openApi/scripts/api-merchants_fixPostGen.js",
    "clean:api-role-permission": "rimraf src/api/generated/role-permission",
    "generate:api-role-permission": "yarn run clean:api-role-permission && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/role-permission.openapi.yml > openApi/generated/role-permission-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/role-permission-swagger20.json && node ./openApi/scripts/api-role-permission_fixPreGen.js && gen-api-models --api-spec openApi/generated/role-permission-swagger20.json --out-dir src/api/generated/role-permission --no-strict --request-types --response-decoders --client && node openApi/scripts/api-role-permission_fixPostGen.js",
    "clean:api-email-notification": "rimraf src/api/generated/email-notification",
    "generate:api-email-notification": "yarn run clean:api-email-notification && mkdirp openApi/generated && api-spec-converter --from=openapi_3 --to=swagger_2 openApi/email-notification.openapi.yml > openApi/generated/email-notification-swagger20.json && node ./node_modules/@pagopa/selfcare-common-frontend/utils/fixSwagger20ArraySchemaDef.js openApi/generated/email-notification-swagger20.json && node ./openApi/scripts/api-email-notification_fixPreGen.js && gen-api-models --api-spec openApi/generated/email-notification-swagger20.json --out-dir src/api/generated/email-notification --no-strict --request-types --response-decoders --client && node openApi/scripts/api-email-notification_fixPostGen.js"
  },
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@mui/icons-material": "^5.14.1",
    "@mui/lab": "^5.0.0-alpha.137",
    "@mui/material": "^7.1.2",
    "@mui/system": "^5.14.1",
    "@pagopa/mui-italia": "^1.6.1",
    "@pagopa/selfcare-common-frontend": "^1.34.60",
    "@pagopa/ts-commons": "^13.1.2",
    "@types/jest": "^30.0.0",
    "axios": "1.8.2",
    "date-fns": "^2.28.0",
    "eslint-plugin-sonarjs": "^0.14.0",
    "formik": "^2.2.9",
    "i18next": "^23.7.11",
    "i18next-browser-languagedetector": "^8.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "keycloak-js": "^26.2.0",
    "node-fetch": "^3.0.0",
    "oidc-client-ts": "^3.3.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.3.8",
    "react-i18next": "^15.1.2",
    "react-oidc-context": "^3.3.0",
    "react-router-dom": "^6.20.1"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@eslint/js": "^9.25.0",
    "@pagopa/openapi-codegen-ts": "^14.0.0",
    "@reduxjs/toolkit": "2.8.2",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^24.0.3",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/react-redux": "^7.1.33",
    "@types/react-router-dom": "^5.1.8",
    "@types/redux-logger": "^3.0.13",
    "@types/validator": "13.11.9",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "@vitejs/plugin-react": "^5.0.1",
    "@vitest/coverage-v8": "3.2.4",
    "@vitest/ui": "^3.2.4",
    "api-spec-converter": "^2.12.0",
    "babel-jest": "^30.0.5",
    "craco-module-federation": "^1.1.0",
    "eslint": "^9.25.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-functional": "^3.7.2",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-react": "^7.26.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^16.0.0",
    "jsdom": "^26.1.0",
    "mkdirp": "^1.0.4",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.4.1",
    "regex-replace": "^2.3.1",
    "rimraf": "^6.0.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.30.1",
    "vite": "^6.3.5",
    "vitest": "^3.2.4"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "restoreMocks": true,
    "clearMocks": true,
    "resetMocks": true,
    "coveragePathIgnorePatterns": [
      "src/index.js",
      "src/bootstrap.tsx",
      "src/reportWebVitals.ts",
      "src/api/generated"
    ],
    "moduleNameMapper": {
      "next/router": "<rootDir>/__mocks__/next/router.js",
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy",
      "\\.(css|sass|scss)$": "identity-obj-proxy",
      "^.+\\.(jpg|jpeg|png|gif|webp|avif|svg)$": "<rootDir>/__mocks__/file-mock.js",
      "react-markdown": "<rootDir>/node_modules/react-markdown/react-markdown.min.js"
    },
    "transformIgnorePatterns": [
      "/node_modules/(?!@pagopa/selfcare-common-frontend)/"
    ],
    "transform": {
      "^.+\\.(ts|tsx|js|jsx)$": "babel-jest"
    },
    "testEnvironment": "jsdom"
  },
  "babel": {
    "presets": [
      "@babel/preset-env",
      [
        "@babel/preset-react",
        {
          "runtime": "automatic"
        }
      ],
      "@babel/preset-typescript"
    ]
  }
}
